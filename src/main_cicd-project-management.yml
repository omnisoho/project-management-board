name: working deployment of cicd-project-management

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DATABASE_URL: ${{ vars.DATABASE_URL}}
  PORT: ${{ vars.PORT}}
  PRISMA_SCHEMA_DISABLE_ADVISORY_LOCK: ${{ vars.PRISMA_SCHEMA_DISABLE_ADVISORY_LOCK}}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Step 6: Run tests
      - name: Run npm test
        id: e-2-e
        run: |
          npm install
          npx playwright install --with-deps
          npx playwright test --config=configs/playwright.config.js

      - name: Upload test artifacts
        if: ${{failure() && steps.e-2-e.conclusion == 'failure'}}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: test-results

      - name: npm install, build
        run: |
          npm run build --if-present

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'cicd-prj-mgmt-app'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_2DF609EB93E9471195C8A1A5FFCAAF8C }}
          
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: 'Production'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  #   permissions:
  #     id-token: write #This is required for requesting the JWT

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: node-app

  #     - name: Unzip artifact for deployment
  #       run: unzip release.zip
      
  #     - name: Login to Azure
  #       uses: azure/login@v2
  #       with:
  #         client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_216D47E391DC49DA99613619C21C1B53 }}
  #         tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F67BF1FD0A7F40028B5DB637A2CE7313 }}
  #         subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4CCA32DEDA7343D2BDA41388BCE5E5E5 }}

  #     - name: 'Deploy to Azure Web App'
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v3
  #       with:
  #         app-name: 'cicd-project-management'
  #         slot-name: 'Production'
  #         package: .
          
